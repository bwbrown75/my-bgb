{"ast":null,"code":"import { Subject, take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UiService {\n  constructor(http) {\n    this.http = http;\n    this.showAccount = false;\n    this.showHeader = true;\n    this.showFeed = true;\n    this.showBlog = false;\n    this.showMessages = false;\n    this.allBlogs = [];\n    this.$allBlogs = new Subject();\n    this.allUsers = [];\n    this.$allUsers = new Subject();\n  }\n  accountView() {\n    return this.showAccount;\n  }\n  getAccountView() {\n    this.showAccount = true;\n  }\n  headerView() {\n    return this.showHeader;\n  }\n  logOut() {\n    this.showAccount = false;\n    this.showBlog = false;\n    this.showMessages = false;\n    this.showFeed = true;\n    this.showHeader = true;\n  }\n  FeedView() {\n    return this.showFeed;\n  }\n  showFeedView() {\n    this.showFeed = true;\n    this.showBlog = false;\n    this.showMessages = false;\n  }\n  blogView() {\n    return this.showBlog;\n  }\n  showBlogView() {\n    this.showFeed = false;\n    this.showMessages = false;\n    this.showBlog = true;\n  }\n  messageView() {\n    return this.showMessages;\n  }\n  showMessageView() {\n    this.showMessages = true;\n  }\n  getAllFeed() {\n    this.http.get('http://localhost:8080/blogPost').pipe(take(1)).subscribe(data => {\n      this.allBlogs = data;\n      this.$allBlogs.next(data);\n    });\n  }\n}\nUiService.ɵfac = function UiService_Factory(t) {\n  return new (t || UiService)(i0.ɵɵinject(i1.HttpClient));\n};\nUiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UiService,\n  factory: UiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,EAAEC,IAAI,QAAQ,MAAM;;;AAOpC,OAAM,MAAOC,SAAS;EAEpBC,YAAmBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEf,gBAAW,GAAG,KAAK;IACnB,eAAU,GAAG,IAAI;IACjB,aAAQ,GAAG,IAAI;IACf,aAAQ,GAAG,KAAK;IAChB,iBAAY,GAAG,KAAK;IAmDrB,aAAQ,GAAe,EAAE;IACzB,cAAS,GAAwB,IAAIJ,OAAO;IAC5C,aAAQ,GAAc,EAAE;IACxB,cAAS,GAAuB,IAAIA,OAAO;EA5DX;EAShCK,WAAW;IAChB,OAAO,IAAI,CAACC,WAAW;EACzB;EAEOC,cAAc;IACnB,IAAI,CAACD,WAAW,GAAG,IAAI;EACzB;EAEOE,UAAU;IACf,OAAO,IAAI,CAACC,UAAU;EACxB;EAEOC,MAAM;IACX,IAAI,CAACJ,WAAW,GAAG,KAAK;IACxB,IAAI,CAACK,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACJ,UAAU,GAAG,IAAI;EACxB;EAEOK,QAAQ;IACb,OAAO,IAAI,CAACD,QAAQ;EACtB;EAEOE,YAAY;IACjB,IAAI,CAACF,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACF,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,YAAY,GAAG,KAAK;EAC3B;EAEOI,QAAQ;IACb,OAAO,IAAI,CAACL,QAAQ;EACtB;EAEOM,YAAY;IACjB,IAAI,CAACJ,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACD,YAAY,GAAG,KAAK;IACzB,IAAI,CAACD,QAAQ,GAAG,IAAI;EACtB;EAEOO,WAAW;IAChB,OAAO,IAAI,CAACN,YAAY;EAC1B;EAEOO,eAAe;IACpB,IAAI,CAACP,YAAY,GAAG,IAAI;EAC1B;EAOOQ,UAAU;IACf,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAa,gCAAgC,CAAC,CACxDC,IAAI,CAACrB,IAAI,CAAC,CAAC,CAAC,CAAC,CACbsB,SAAS,CACRC,IAAI,IAAG;MACL,IAAI,CAACC,QAAQ,GAAGD,IAAI;MACpB,IAAI,CAACE,SAAS,CAACC,IAAI,CAACH,IAAI,CAAC;IAC3B,CAAC,CACF;EAEL;;AA1EWtB,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAA0B,SAAT1B,SAAS;EAAA2B,YAFR;AAAM","names":["Subject","take","UiService","constructor","http","accountView","showAccount","getAccountView","headerView","showHeader","logOut","showBlog","showMessages","showFeed","FeedView","showFeedView","blogView","showBlogView","messageView","showMessageView","getAllFeed","get","pipe","subscribe","data","allBlogs","$allBlogs","next","factory","providedIn"],"sourceRoot":"","sources":["/Users/yorkmacbook093/vscodeProjects/blog-app-fe/src/app/services/ui.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject, take } from 'rxjs';\nimport { Account } from '../Models/account';\nimport { blogPost } from '../Models/blogPost';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiService {\n\n  constructor(public http: HttpClient) { }\n\n  private showAccount = false\n  private showHeader = true\n  private showFeed = true\n  private showBlog = false\n  private showMessages = false\n\n\n  public accountView(): boolean {\n    return this.showAccount\n  }\n\n  public getAccountView() {\n    this.showAccount = true\n  }\n\n  public headerView(): boolean {\n    return this.showHeader\n  }\n\n  public logOut() {\n    this.showAccount = false\n    this.showBlog = false\n    this.showMessages = false\n    this.showFeed = true\n    this.showHeader = true\n  }\n\n  public FeedView(): boolean {\n    return this.showFeed\n  }\n\n  public showFeedView() {\n    this.showFeed = true\n    this.showBlog = false\n    this.showMessages = false\n  }\n\n  public blogView(): boolean {\n    return this.showBlog\n  }\n\n  public showBlogView() {\n    this.showFeed = false\n    this.showMessages = false\n    this.showBlog = true\n  }\n\n  public messageView(): boolean {\n    return this.showMessages\n  }\n\n  public showMessageView() {\n    this.showMessages = true\n  }\n\n  public allBlogs: blogPost[] = []\n  public $allBlogs: Subject<blogPost[]> = new Subject\n  public allUsers: Account[] = []\n  public $allUsers: Subject<Account[]> = new Subject\n\n  public getAllFeed() {\n    this.http.get<blogPost[]>('http://localhost:8080/blogPost')\n      .pipe(take(1))\n      .subscribe(\n        data => {\n          this.allBlogs = data;\n          this.$allBlogs.next(data);\n        }\n      )\n\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}